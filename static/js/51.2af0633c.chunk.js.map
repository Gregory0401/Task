{"version":3,"file":"static/js/51.2af0633c.chunk.js","mappings":"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","sources":["redux/tweets/tweetsSelectors.js","components/Tweet/Tweet.styled.js","components/Tweet/Tweet.jsx","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","components/ButtonUp/ButtonUp.styled.js","components/ButtonUp/ButtonUp.jsx","redux/filters/filtersSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/TweetsPage/TweetsPage.styled.js","components/Loader/Loader.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["export const selectTweets = state => state.tweets.items;\nexport const selectIsLoading = state => state.tweets.isLoading;\nexport const selectError = state => state.tweets.error;\nexport const selectIsDataOver = state => state.tweets.isDataOver;\n","import styled from 'styled-components';\nimport logo from '../../assets/images/logo.png';\nimport image from '../../assets/images/picture.png';\n\nexport const StyledWrapper = styled.div`\n  position: relative;\n  width: 380px;\n  background: url(${logo}) no-repeat 20px 20px,\n    url(${image}) no-repeat center 28px/78%,\n    linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  text-align: center;\n\n  @media (min-width: 320px) {\n    width: 290px;\n  }\n  @media (min-width: 410px) {\n    width: 380px;\n  }\n`;\n\nexport const Line = styled.div`\n  position: relative;\n  top: 214px;\n  height: 8px;\n  background-color: #ebd8ff;\n  box-shadow: var(--boxShadowLine);\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n  background-color: #ebd8ff;\n  box-shadow: var(--boxShadowEllipse);\n  border-radius: 50%;\n`;\n\nexport const AvatarImg = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  /* width: 62px;\n  height: 62px; */\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nexport const UserInfo = styled.div`\n  margin-top: 284px;\n  margin-bottom: 26px;\n`;\n\nexport const UserName = styled.h2`\n  text-align: center;\n\n  font-weight: 600;\n  font-size: 20px;\n\n  color: var(--titleTextColor);\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 284px;\n  margin-bottom: 26px;\n`;\n\nexport const Button = styled.button`\n  padding: 14px 28px;\n  box-shadow: var(--boxShadowButton);\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  margin-bottom: 36px;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: inherit;\n  text-transform: uppercase;\n  color: var(--primaryButtonColor);\n  background: var(--primaryButtonBackground);\n  transition: opacity var(--transition);\n\n  &.active {\n    background-color: var(--secondaryButtonBackground);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  StyledWrapper,\n  AvatarWrapper,\n  Line,\n  AvatarImg,\n  UserName,\n  Text,\n  Button,\n  List,\n} from './Tweet.styled';\n\nfunction Tweet({ id, avatar, user, tweets, followers, isFollowing }) {\n  const [isFollow, setIsFollow] = useState(isFollowing);\n  const [counter, setCounter] = useState(followers);\n\n  const onClickFollow = id => {\n    isFollow ? setCounter(prev => prev - 1) : setCounter(prev => prev + 1);\n    setIsFollow(prev => !prev);\n\n    const updateData = !isFollow\n      ? {\n          followers: counter + 1,\n          isFollowing: true,\n        }\n      : {\n          followers: counter - 1,\n          isFollowing: false,\n        };\n\n    axios.put(\n      `https://643aea3090cd4ba563051059.mockapi.io/api/users/${id}`,\n      updateData\n    );\n  };\n\n  return (\n    <StyledWrapper>\n      <Line>\n        <AvatarWrapper>\n          <AvatarImg src={avatar} alt=\"User avatar\" width=\"62\" height=\"62\" />\n        </AvatarWrapper>\n      </Line>\n\n      <List>\n        <li>\n          <UserName>{user}</UserName>\n        </li>\n        <li>\n          <Text>{new Intl.NumberFormat('de-DE').format(tweets)} Tweets</Text>\n        </li>\n        <li>\n          <Text>\n            {new Intl.NumberFormat('de-DE').format(counter)} Followers\n          </Text>\n        </li>\n      </List>\n\n      <Button\n        onClick={() => {\n          onClickFollow(id);\n        }}\n        className={isFollow && 'active'}\n      >\n        {isFollow ? 'Following' : 'Follow'}\n      </Button>\n    </StyledWrapper>\n  );\n}\n\nexport default Tweet;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n\n  justify-content: center;\n  margin-bottom: 30px;\n  padding-top: 30px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTweets } from 'redux/tweets/tweetsSelectors';\n\nimport Tweet from 'components/Tweet/Tweet';\nimport { List } from './TweetsList.styled';\n\nfunction TweetsList() {\n  const tweetsArr = useSelector(selectTweets);\n  return (\n    <List>\n      {tweetsArr.map(({ id, avatar, user, tweets, followers, isFollowing }) => (\n        <li key={id}>\n          <Tweet\n            id={id}\n            avatar={avatar}\n            user={user}\n            tweets={tweets}\n            followers={followers}\n            isFollowing={isFollowing}\n          />\n        </li>\n      ))}\n    </List>\n  );\n}\n\nexport default TweetsList;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  cursor: pointer;\n  position: fixed;\n  bottom: 40px;\n  right: 5%;\n  padding: 14px 16px;\n  border: none;\n  border-radius: 50%;\n\n  background-color: #5cd3a841;\n  transition: background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: #5cd3a85a;\n  }\n`;\n","import React from 'react';\nimport { AiOutlineUp } from 'react-icons/ai';\n\nimport { ButtonStyled } from './ButtonUp.styled';\n\nfunction ButtonUp() {\n  const onClick = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  return (\n    <ButtonStyled onClick={onClick} type=\"button\">\n      <AiOutlineUp size={24} color=\"#4b2a99\" />\n    </ButtonStyled>\n  );\n}\n\nexport default ButtonUp;\n","export const selectFilter = state => state.filters.value;\nexport const selectPage = state => state.filters.page;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  position: relative;\n`;\n\nexport const FilterLabel = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  border-bottom: 1px dashed #4b2a99;\n\n  cursor: pointer;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n\nexport const FilterCurrent = styled.span`\n  color: var(--mainColor);\n`;\n\nexport const Popup = styled.div`\n  z-index: 1;\n  position: absolute;\n  right: 0;\n  margin-top: 15px;\n  background: #ffffff;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\n  border-radius: 10px;\n  overflow: hidden;\n  padding: 10px 0;\n  @media (max-width: 340px) {\n    font-size: 14px;\n    width: 100%;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  overflow: hidden;\n`;\n\nexport const ListItem = styled.li`\n  padding: 12px 20px;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover {\n    background-color: rgba(75, 42, 153, 0.2);\n  }\n\n  &.active {\n    background-color: rgba(75, 42, 153, 0.1);\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  color: var(--mainColor);\n`;\n","import React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdFilterAlt } from 'react-icons/md';\nimport { selectFilter } from 'redux/filters/filtersSelectors';\nimport { setFilter } from 'redux/filters/filtersSlice';\nimport { resetTweets } from 'redux/tweets/tweetsSlice';\nimport {\n  FilterWrapper,\n  FilterLabel,\n  FilterCurrent,\n  Popup,\n  List,\n  ListItem,\n  Text,\n} from './Filter.styled';\n\nconst filterItems = ['show all', 'follow', 'followings'];\n\nfunction Filter() {\n  const filterRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handlerClick = e => {\n    if (!filterRef.current.contains(e.target)) {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!isVisible) return;\n    if (!filterRef.current) return;\n\n    document.addEventListener('click', handlerClick);\n\n    return () => {\n      document.removeEventListener('click', handlerClick);\n    };\n  }, [isVisible]);\n\n  const onSelectValue = value => {\n    setIsVisible(false);\n\n    if (filter !== value) {\n      dispatch(resetTweets());\n      dispatch(setFilter(value));\n    }\n  };\n\n  return (\n    <FilterWrapper ref={filterRef}>\n      <FilterLabel>\n        <MdFilterAlt color=\"#4b2a99\" size={26} />\n        <FilterCurrent\n          onClick={() => {\n            setIsVisible(prev => !prev);\n          }}\n        >\n          {filter}\n        </FilterCurrent>\n      </FilterLabel>\n      {isVisible && (\n        <Popup>\n          <List>\n            {filterItems.map((item, index) => (\n              <ListItem\n                key={index}\n                onClick={() => {\n                  onSelectValue(item);\n                }}\n                className={filter === item && 'active'}\n              >\n                <Text>{item}</Text>\n              </ListItem>\n            ))}\n          </List>\n        </Popup>\n      )}\n    </FilterWrapper>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: #4b2a99;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  text-align: center;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n  border: none;\n  padding: 14px 28px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  cursor: pointer;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n  position: relative;\n  text-align: center;\n`;\n\nexport const FilterWrapper = styled.div`\n  padding: 20px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 400px) {\n    flex-direction: column;\n    gap: 8px;\n  }\n`;\n\nexport const ButtonGoBack = styled.button`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  text-align: center;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #4b2a99;\n  background: transparent;\n  cursor: pointer;\n  border: none;\n\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"64\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { AiOutlineRollback } from 'react-icons/ai';\nimport TweetsList from 'components/TweetsList/TweetsList';\nimport ButtonUp from 'components/ButtonUp/ButtonUp';\n\nimport Container from 'components/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport {\n  Button,\n  Wrapper,\n  FilterWrapper,\n  ButtonGoBack,\n} from './TweetsPage.styled';\nimport Loader from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTweets } from 'redux/tweets/tweetsOperations';\nimport {\n  selectIsLoading,\n  selectError,\n  selectIsDataOver,\n} from 'redux/tweets/tweetsSelectors';\nimport { selectFilter, selectPage } from 'redux/filters/filtersSelectors';\nimport { incrementPage } from 'redux/filters/filtersSlice';\n\nfunction TweetsPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isDataOver = useSelector(selectIsDataOver);\n\n  const filter = useSelector(selectFilter);\n  const page = useSelector(selectPage);\n\n  const [isVisibleBtn, setIsVisibleBtn] = useState(false);\n\n  const fetchData = async () => {\n    dispatch(fetchTweets({ filter, page }));\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, filter]);\n\n  useEffect(() => {\n    const trigger = 350;\n\n    window.addEventListener('scroll', () => {\n      window.scrollY > trigger ? setIsVisibleBtn(true) : setIsVisibleBtn(false);\n    });\n  }, []);\n\n  const onLoadMore = () => {\n    dispatch(incrementPage());\n  };\n\n  const onGoBack = () => {\n    navigate('/');\n  };\n\n  error && toast(error);\n\n  return (\n    <Container>\n      <Wrapper>\n        <FilterWrapper>\n          <ButtonGoBack onClick={onGoBack} type=\"button\">\n            Go back\n            <AiOutlineRollback size=\"22px\" />\n          </ButtonGoBack>\n          <Filter />\n        </FilterWrapper>\n        <TweetsList />\n        {isLoading && <Loader />}\n        {!isDataOver && !isLoading && (\n          <Button onClick={onLoadMore} type=\"button\">\n            Load more\n          </Button>\n        )}\n        {isVisibleBtn && <ButtonUp />}\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default TweetsPage;\n"],"names":["selectTweets","state","tweets","items","selectIsLoading","isLoading","selectError","error","selectIsDataOver","isDataOver","StyledWrapper","styled","image","Line","AvatarWrapper","AvatarImg","UserName","Text","List","Button","id","avatar","user","followers","isFollowing","useState","isFollow","setIsFollow","counter","setCounter","src","alt","width","height","Intl","NumberFormat","format","onClick","prev","updateData","axios","onClickFollow","className","tweetsArr","useSelector","map","ButtonStyled","window","scrollTo","top","behavior","type","size","color","selectFilter","filters","value","selectPage","page","FilterWrapper","FilterLabel","FilterCurrent","Popup","ListItem","filterItems","filterRef","useRef","isVisible","setIsVisible","dispatch","useDispatch","filter","handlerClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","item","index","resetTweets","setFilter","Wrapper","ButtonGoBack","strokeColor","strokeWidth","animationDuration","visible","navigate","useNavigate","isVisibleBtn","setIsVisibleBtn","fetchData","fetchTweets","scrollY","toast","Container","incrementPage"],"sourceRoot":""}